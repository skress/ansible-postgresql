# file: postgresql/tasks/main.yml

- include_vars: "{{ item }}"
  with_first_found:
    - "../vars/{{ ansible_os_family }}.yml"
    - "../vars/empty.yml"
  tags: [always]

#
# Override defaults/main.yml with PostgreSQL version specific values
#
- include_vars: "{{ item }}"
  with_first_found:
    - "../vars/postgresql_{{ postgresql_version }}.yml"
    - "../vars/empty.yml"
  tags: [always]

- import_tasks: install_apt.yml
  when: ansible_pkg_mgr == "apt"
  tags: [postgresql, postgresql-install]

- import_tasks: install_yum.yml
  when: ansible_pkg_mgr == "yum" and ( ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "OracleLinux")
  tags: [postgresql, postgresql-install]

- import_tasks: install_dnf.yml
  when: ansible_pkg_mgr == "dnf" and ansible_distribution == "Fedora"
  tags: [postgresql, postgresql-install]

- name: Make sure that ssl cert and key can be read when ssl is enabled
  file:
    path: "{{ item }}"
    owner: postgres
    group: postgres
    mode: 0600
  with_items:
    - "{{ postgresql_ssl_cert_file }}"
    - "{{ postgresql_ssl_key_file }}"

- import_tasks: extensions/detect_repmgr_primary.yml
  when: postgresql_ext_install_repmgr and ansible_service_mgr == 'systemd'
  tags: [postgresql, postgresql-extensions]

- import_tasks: extensions.yml
  tags: [postgresql, postgresql-extensions]

- import_tasks: fdw.yml
  tags: [postgresql, postgresql-fdw]

- import_tasks: configure.yml
  tags: [postgresql, postgresql-configure]

- import_tasks: users.yml
  tags: [postgresql, postgresql-users]

- import_tasks: databases.yml
  tags: [postgresql, postgresql-databases]

- import_tasks: schemas.yml
  tags: [postgresql, postgresql-schemas]

- import_tasks: users_privileges.yml
  tags: [postgresql, postgresql-users]

- import_tasks: monit.yml
  when: monit_protection is defined and monit_protection == true
  tags: [postgresql, postgresql-monit]

- import_tasks: extensions/configure_repmgr.yml
  when: postgresql_ext_install_repmgr and ansible_service_mgr == 'systemd'
  tags: [postgresql, postgresql-extensions]

- import_tasks: extensions/configure_repmgr_fencing.yml
  when: postgresql_ext_install_repmgr and repmgr_fencing_enabled
  tags: [postgresql, postgresql-extensions]

- import_tasks: extensions/configure_barman.yml
  when: ansible_pkg_mgr == "apt" and postgresql_ext_install_barman
  tags: [postgresql, postgresql-extensions]

- import_tasks: check_pg_version_mismatch.yml
  tags: [postgresql, postgresql-version-mismatch]
